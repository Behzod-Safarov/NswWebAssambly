@page "/nsw_wifimodule"
@inject IJSRuntime JSRuntime
@inherits LayoutComponentBase
<NSWLayout />
<br>
<br>

<div class="container mt-5">
    <h1 class="display-4 text-center">NSW Wi-Fi moduli</h1>
    <p class="lead text-center">IoT loyihalaringiz uchun simsiz aloqani oson tashkil qiling</p>

    <div class="my-5">
        <h2>Umumiy ma‚Äôlumot</h2>
        <p>NSW Wi-Fi moduli simsiz tarmoq orqali ma‚Äôlumot almashish imkonini beruvchi IoT komponentidir. Ushbu modul yordamida Arduino yoki boshqa mikrokontrollerlarni internetga ulash, masofadan boshqarish, ma‚Äôlumotlarni serverga yuborish yoki olish, real vaqtda monitoring kabi vazifalarni bajarish mumkin.</p>
        <p>Modul odatda ESP8266 yoki ESP32 chiplariga asoslanadi va Wi-Fi tarmog‚Äòiga ulanib, HTTP/HTTPS so‚Äòrovlarini yuborish, shuningdek, o‚Äòrnatilgan veb-serverlarni ishga tushirish funksiyalarini taqdim etadi.</p>
        <div class="image-container">
            <img src="Images/nsw_wifi.jpg" alt="NSW Wi-Fi moduli" class="img-fluid rounded shadow my-3" style="max-width: 150px;" loading="lazy">
            <p class="image-caption">NSW Wi-Fi moduli ‚Äì simsiz aloqa uchun</p>
        </div>
    </div>

    <div class="my-5">
        <h2>Asosiy xususiyatlar</h2>
        <ul>
            <li>Ishlash kuchlanishi: 3.3V (ba‚Äôzi modellar 5V konverter bilan)</li>
            <li>Wi-Fi standarti: 802.11 b/g/n</li>
            <li>Protokollar: TCP/IP, UDP, HTTP, MQTT va boshqalar</li>
            <li>Serial aloqa: UART (RX/TX)</li>
            <li>Ichki flesh-xotira: 1‚Äì4 MB (modelga qarab)</li>
            <li>Modul turi: ESP8266 yoki ESP32 (ko‚Äòp yadroli variant)</li>
        </ul>
        <p>Eslatma: Modulni 3.3V da ishlating yoki kuchlanish darajasini tushiruvchi (level shifter) sxemadan foydalaning. 5V ga to‚Äòg‚Äòridan-to‚Äòg‚Äòri ulash modulga zarar yetkazishi mumkin.</p>
    </div>

    <div class="my-5">
        <h2>Ilovalar</h2>
        <p>NSW Wi-Fi moduli quyidagi sohalarda qo‚Äòllaniladi:</p>
        <ul>
            <li>Sensorlardan ma‚Äôlumotlarni bulut xizmatlariga yuborish</li>
            <li>Telegram botlari orqali masofadan boshqarish</li>
            <li>Aqlli uy tizimlari</li>
            <li>Masofadan monitoring va nazorat qilish</li>
            <li>HTTP server yoki mijoz sifatida ishlatish</li>
            <li>Firebase, Blynk, ThingSpeak, MQTT kabi xizmatlar bilan integratsiya</li>
        </ul>
    </div>

    <div class="my-5">
        <h2>Pin ta‚Äôrifi</h2>
        <p>Wi-Fi modulining pinlari soni va tartibi modelga qarab farqlanadi. Quyida ESP8266 (ESP-01) modulining asosiy pinlari keltirilgan:</p>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <th>Pin</th>
                    <th>Vazifasi</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>VCC</td>
                    <td>Quvvat manbai (3.3V)</td>
                </tr>
                <tr>
                    <td>GND</td>
                    <td>Manfiy quvvat </td>
                </tr>
                <tr>
                    <td>TX</td>
                    <td>Ma‚Äôlumot yuborish (Serial OUT)</td>
                </tr>
                <tr>
                    <td>RX</td>
                    <td>Ma‚Äôlumot qabul qilish (Serial IN)</td>
                </tr>
                <tr>
                    <td>CH_PD / EN</td>
                    <td>Chipni faollashtirish (HIGH holatda bo‚Äòlishi kerak)</td>
                </tr>
                <tr>
                    <td>GPIO0, GPIO2</td>
                    <td>Umumiy maqsadli kirish-chiqish pinlari</td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="my-5">
        <h2>Simlarni ulash rejimi</h2>
        <p>‚óè RJ25 bilan ulanish</p>
        <p>NSW Wi-Fi Moduli oq-kulrang ranglariga ega bo‚Äòlib, RJ25 porti orqali NSW Boshqaruv platasining oq-kulrang rangli portlariga ulanadi.</p>

        @* <h2>Ulanish (Arduino bilan)</h2>
        <p>Modulni Arduino platasiga ulash uchun quyidagi pinlardan foydalaniladi:</p>
        <ul>
            <li><b>VCC</b> ‚Üí 3.3V (Eslatma: 5V ulanmasin!)</li>
            <li><b>GND</b> ‚Üí GND</li>
            <li><b>TX</b> ‚Üí Arduino RX (kuchlanishni moslashtirish kerak)</li>
            <li><b>RX</b> ‚Üí Arduino TX (darajani tushiruvchi orqali)</li>
            <li><b>CH_PD</b> ‚Üí 3.3V (doimiy HIGH holatda)</li>
        </ul>
        <div class="image-container">
            <img src="Images/wifi_arduino_connection.jpg" alt="Wi-Fi moduli Arduino bilan ulanishi" class="img-fluid rounded shadow my-3" style="max-width: 400px;" loading="lazy">
            <p class="image-caption">Arduino bilan ulanish sxemasi</p>
        </div> *@
        <p>Eslatma: ESP32 modeli mustaqil mikrokontroller sifatida ishlaydi va qo‚Äòshimcha kontroller talab qilmaydi.</p>
    </div>

    <div class="my-5">
        <h2>Dasturlash bo‚Äòyicha qo‚Äòllanma</h2>
        <p>Quyidagi Arduino kodi <code>NswWiFi.h</code> kutubxonasi yordamida Wi-Fi tarmog‚Äòiga ulanib, oddiy HTTP so‚Äòrovini yuboradi:</p>
        
        <div class="code-container">
            <div class="code-header">
                <span>Arduino dastur namunasi</span>
                <button class="copy-btn" onclick="copyCode(this)" title="Nusxa olish">Nusxa olish</button>
            </div>
            <pre class="line-numbers"><code class="language-cpp">
#include &lt; NswWiFi.h>

// üìå Wi-Fi tarmog'ining nomi va paroli
#define SSID "SizningWiFiTarmog'ingiz"
#define PAROL "SizningWiFiParolingiz"

// üìå Wi-Fi modulini PORT_6 ga ulaymiz (TXD, RXD)
NswWiFi wifi(PORT_6);

void setup() {
    Serial.begin(9600);
    wifi.begin(115200); // üìå Wi-Fi modulining baud rate'ini sozlash

    Serial.println("üì° Wi-Fi ga ulanmoqda...");
    if (wifi.connectWiFi(SSID, PAROL)) {
        Serial.println("‚úÖ Wi-Fi ga muvaffaqiyatli ulandi!");
        Serial.print("üåê IP manzil: ");
        Serial.println(wifi.getIP());
    } else {
        Serial.println("‚ùå Ulanish amalga oshmadi!");
    }
}

void loop() {
    // üìå Wi-Fi orqali kelayotgan ma'lumotlarni chiqarish
    if (wifi.available()) {
        Serial.write(wifi.read());
    }

    // üìå Serial monitor orqali Wi-Fi moduliga ma'lumot yuborish
    if (Serial.available()) {
        wifi.write(Serial.read());
    }
}

            </code></pre>
        </div>
        <p>Ushbu kod ESP8266 modulini Wi-Fi tarmog‚Äòiga ulaydi va IP manzilni Serial monitorda ko‚Äòrsatadi. Qo‚Äòshimcha funksiyalar uchun HTTP yoki MQTT kutubxonalaridan foydalaning.</p>

        <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/themes/prism-coy.min.css" rel="stylesheet" />
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/prism.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/components/prism-cpp.min.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.js"></script>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/prism/1.29.0/plugins/line-numbers/prism-line-numbers.min.css" rel="stylesheet" />
    </div>

    <div class="my-5">
        <h2>Umumiy tahlil</h2>
        <p>NSW Wi-Fi moduli ESP8266 yoki ESP32 chiplari asosida ishlaydi va IoT loyihalari uchun simsiz aloqa imkoniyatlarini taqdim etadi. Modulning kichik o‚Äòlchami, kam quvvat sarfi va ko‚Äòp protokollarni qo‚Äòllab-quvvatlashi uni aqlli uy tizimlari, masofadan monitoring va ta‚Äôlim loyihalari uchun ideal qiladi. Arduino bilan integratsiya qilish oson bo‚Äòlib, bulut xizmatlari bilan ishlash imkonini beradi.</p>
    </div>

    <div class="text-center my-5">
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_flamesensor" role="button">
            <i class="fas fa-arrow-left"></i> Oldingi
        </a>
        <a class="btn btn-lg custom-btn shadow-lg mx-2" href="/nsw_colorsensor" role="button">
            Keyingi <i class="fas fa-arrow-right"></i>
        </a>
    </div>
</div>

<style>
.custom-btn {
    background: linear-gradient(135deg, rgb(0, 217, 255), rgb(0, 150, 200));
    color: white;
    padding: 12px 24px;
    font-size: 18px;
    font-weight: bold;
    border: none;
    border-radius: 50px;
    transition: all 0.3s ease-in-out;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
}

.custom-btn:hover {
    background: linear-gradient(135deg, rgb(0, 150, 200), rgb(0, 217, 255));
    transform: scale(1.05);
    box-shadow: 0px 5px 15px rgba(0, 217, 255, 0.4);
}

.custom-btn i {
    margin: 0 8px;
}

.code-container {
    position: relative;
    background: linear-gradient(135deg, #f5f7fa 0%, #e4e7eb 100%);
    border-radius: 12px;
    margin: 2rem 0;
    padding: 0;
    box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    border: 2px solid #007bff;
    transition: transform 0.3s ease;
}

.code-container:hover {
    transform: translateY(-5px);
}

.code-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background: linear-gradient(135deg, #007bff, #0056b3);
    padding: 12px 20px;
    border-bottom: 1px solid #004085;
    color: #fff;
    font-size: 16px;
    font-weight: bold;
}

.copy-btn {
    background: #28a745;
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    font-size: 14px;
    font-weight: 500;
    transition: all 0.3s ease;
    position: relative;
}

.copy-btn:hover {
    background: #218838;
    transform: scale(1.05);
}

.copy-btn.copied {
    background: #17a2b8;
}

.copy-btn.copied::after {
    content: "Nusxa olindi!";
    position: absolute;
    top: -30px;
    right: 0;
    background: #17a2b8;
    color: white;
    padding: 4px 8px;
    border-radius: 4px;
    font-size: 12px;
    opacity: 0;
    animation: fadeInOut 1.5s ease;
}

@@keyframes fadeInOut {
    0% { opacity: 0; transform: translateY(10px); }
    20% { opacity: 1; transform: translateY(0); }
    80% { opacity: 1; transform: translateY(0); }
    100% { opacity: 0; transform: translateY(-10px); }
}

pre.line-numbers {
    margin: 0;
    padding: 20px;
    overflow-x: auto;
    background: #fff;
    border-radius: 0 0 12px 12px;
}

code {
    font-family: 'Consolas', 'Monaco', monospace;
    font-size: 15px;
}

.prism-coy .line-numbers-rows {
    border-right: 1px solid #ddd;
    padding-right: 10px;
    margin-right: 10px;
}

.image-container {
    text-align: center;
    margin: 1.5rem 0;
}

.img-fluid {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: 2px solid transparent;
    background: linear-gradient(135deg, #007bff, #00d4ff) border-box;
    border-radius: 10px;
}

.img-fluid:hover {
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(0, 123, 255, 0.3);
}

.image-caption {
    font-size: 14px;
    color: #555;
    margin-top: 10px;
    font-style: italic;
}
</style>

@code {
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await JSRuntime.InvokeVoidAsync("scrollToTop");
    }
}

<script>
    window.scrollToTop = function () {
        window.scrollTo(0, 0);
    };

    function copyCode(button) {
        const code = button.parentElement.nextElementSibling.querySelector('code').textContent;
        navigator.clipboard.writeText(code).then(() => {
            button.classList.add('copied');
            button.textContent = 'Nusxa olindi!';
            setTimeout(() => {
                button.classList.remove('copied');
                button.textContent = 'Nusxa olish';
            }, 2000);
        });
    }
</script>